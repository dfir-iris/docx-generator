name: Continuous Integration
on: [push, pull_request]

jobs:

  tests-unit:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up test environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      - name: Run tests
        run: |
          source venv/bin/activate
          cd test/unit
          PYTHONUNBUFFERED=true PYTHONPATH=../../source python -m unittest --verbose

  tests-component:
    name: Component tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up test environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      - name: Run tests
        run: |
          source venv/bin/activate
          cd test/component
          mkdir results
          mkdir tmp
          PYTHONUNBUFFERED=true PYTHONPATH=../../source python -m unittest --verbose

  build-documentation:
    name: Build documentation
    runs-on: ubuntu-22.04
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Retrieve version
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - name: Set up build environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r dev_requirements.txt
      - name: Build documentation
        run: |
          source venv/bin/activate
          (cd documentation/user_doc && mkdocs build --clean --site-dir ../../results/documentation/)
          tar czvf results/docx_generator_documentation_${{ env.VERSION }}.tar.gz results/documentation/
      - uses: actions/upload-artifact@v4
        with:
            name: Documentation
            path: esults/docx_generator_documentation_${{ env.VERSION }}.tar.gz
            if-no-files-found: error


  package:
    name: Package python wheel
    runs-on: ubuntu-22.04
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up packaging environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install wheel
      - name: Build package
        run: |
          source venv/bin/activate
          python setup.py bdist_wheel
      - uses: actions/upload-artifact@v4
        with:
            name: Wheel package
            path: dist
            if-no-files-found: error

